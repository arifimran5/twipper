import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "@/utils/api";
import { useRouter } from "next/router";
import { useEffect } from "react";
import AddPost from "@/components/feature/AddPost";

const Home: NextPage = () => {
  const { data: sessionData } = useSession();
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  const router = useRouter();
  useEffect(() => {
    if (window) {
      if (!sessionData) void router.push("/login");
    }
  }, [sessionData, router]);

  return (
    <>
      <Head>
        <title>Twipper</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <AddPost />
      <h1>{hello.data?.greeting}</h1>
      <AuthShowcase />
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-black">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-gray-900/10 px-10 py-3 font-semibold text-black no-underline"
        onClick={
          sessionData ? () => void signOut() : () => void signIn("github")
        }
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
